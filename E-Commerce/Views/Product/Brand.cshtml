@model IEnumerable<Product>

@{
    ViewBag.Title = $"برند {ViewBag.Brand?.Title}";
}

<!--search-category------------------------->
@await Component.InvokeAsync("ProductsFilter", new { ViewBag.CategoryGroups, ViewBag.Categories, ViewBag.Brands, ViewBag.Cars })

<div class="col-lg-9 col-md-8 col-xs-12 pull-left">
    <div class="js-products">
        <div class="breadcrumb-container">
            <ul class="js-breadcrumb">
                <li><a asp-controller="Home" asp-action="Index">کاربیوتیک</a></li>

                @if (ViewBag.Maker != null)
                {
                    <li><a asp-controller="Product" asp-action="Maker" asp-route-id="@ViewBag.Maker.Id">@ViewBag.Maker.Name</a></li>
                }

                @if (ViewBag.Car != null)
                {
                    <li><a asp-controller="Product" asp-action="Car" asp-route-id="@ViewBag.Car.Id">@ViewBag.Car.Name</a></li>
                }
            </ul>
        </div>
    </div>
</div>

<div class="col-lg-9 col-md-8 col-xs-12 pull-left">
    <div class="js-products" style="margin-top: 0px; background: white">

        @await Component.InvokeAsync("ProductsListing", new { products = Model, count = ViewBag.Count, skip = ViewBag.Skip, limit = ViewBag.Limit })

    </div>
</div>
<!--search-category------------------------->